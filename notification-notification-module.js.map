{"version":3,"sources":["webpack:///./node_modules/@angular/common/fesm5/testing.js","webpack:///./node_modules/@angular/router/fesm5/testing.js","webpack:///./src/app/notification/notification-routing.module.ts","webpack:///./src/app/notification/notification.module.ts","webpack:///./src/app/notification/notification/notification.component.css","webpack:///./src/app/notification/notification/notification.component.html","webpack:///./src/app/notification/notification/notification.component.ts","webpack:///./src/app/notification/notification/notification.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE0D;AACD;AACN;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA,2DAA2D,8CAA8C;AACzG,wDAAwD,sBAAsB;AAC9E,8CAA8C,+CAA+C;AAC7F,+CAA+C,gDAAgD;AAC/F;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAqD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA,+BAA+B,YAAY;AAC3C,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yDAAyD;AACzF;AACA;AACA;AACA;AACA;AACA,gCAAgC,yDAAyD;AACzF;AACA;AACA;AACA,wCAAwC,mDAAmD;AAC3F;AACA,sDAAsD,aAAa;AACnE,kBAAkB,wDAAU;AAC5B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0BAA0B,WAAW,EAAE;AACtG,8DAA8D,8BAA8B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,yBAAyB;AACnF,2BAA2B,wDAAU;AACrC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC,CAAC,gEAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;AAC7C;;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEyD;AACI;AACe;AAC8B;AACqH;;AAE/N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,uCAAuC,+CAA+C;AACtF,IAAI;AACJ;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,MAAM,yCAAyC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,uCAAuC,UAAU;AACvF;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAU;AACzC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU,uBAAuB,sDAAQ;AACjD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AAC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","file":"notification-notification-module.js","sourcesContent":["/**\n * @license Angular v7.0.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __extends, __metadata } from 'tslib';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nvar SpyLocation = /** @class */ (function () {\n    function SpyLocation() {\n        this.urlChanges = [];\n        this._history = [new LocationState('', '', null)];\n        this._historyIndex = 0;\n        /** @internal */\n        this._subject = new EventEmitter();\n        /** @internal */\n        this._baseHref = '';\n        /** @internal */\n        this._platformStrategy = null;\n    }\n    SpyLocation.prototype.setInitialPath = function (url) { this._history[this._historyIndex].path = url; };\n    SpyLocation.prototype.setBaseHref = function (url) { this._baseHref = url; };\n    SpyLocation.prototype.path = function () { return this._history[this._historyIndex].path; };\n    SpyLocation.prototype.state = function () { return this._history[this._historyIndex].state; };\n    SpyLocation.prototype.isCurrentPathEqualTo = function (path, query) {\n        if (query === void 0) { query = ''; }\n        var givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n        var currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n        return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n    };\n    SpyLocation.prototype.simulateUrlPop = function (pathname) {\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n    };\n    SpyLocation.prototype.simulateHashChange = function (pathname) {\n        // Because we don't prevent the native event, the browser will independently update the path\n        this.setInitialPath(pathname);\n        this.urlChanges.push('hash: ' + pathname);\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n    };\n    SpyLocation.prototype.prepareExternalUrl = function (url) {\n        if (url.length > 0 && !url.startsWith('/')) {\n            url = '/' + url;\n        }\n        return this._baseHref + url;\n    };\n    SpyLocation.prototype.go = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        path = this.prepareExternalUrl(path);\n        if (this._historyIndex > 0) {\n            this._history.splice(this._historyIndex + 1);\n        }\n        this._history.push(new LocationState(path, query, state));\n        this._historyIndex = this._history.length - 1;\n        var locationState = this._history[this._historyIndex - 1];\n        if (locationState.path == path && locationState.query == query) {\n            return;\n        }\n        var url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push(url);\n        this._subject.emit({ 'url': url, 'pop': false });\n    };\n    SpyLocation.prototype.replaceState = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        path = this.prepareExternalUrl(path);\n        var history = this._history[this._historyIndex];\n        if (history.path == path && history.query == query) {\n            return;\n        }\n        history.path = path;\n        history.query = query;\n        history.state = state;\n        var url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push('replace: ' + url);\n    };\n    SpyLocation.prototype.forward = function () {\n        if (this._historyIndex < (this._history.length - 1)) {\n            this._historyIndex++;\n            this._subject.emit({ 'url': this.path(), 'state': this.state(), 'pop': true });\n        }\n    };\n    SpyLocation.prototype.back = function () {\n        if (this._historyIndex > 0) {\n            this._historyIndex--;\n            this._subject.emit({ 'url': this.path(), 'state': this.state(), 'pop': true });\n        }\n    };\n    SpyLocation.prototype.subscribe = function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    SpyLocation.prototype.normalize = function (url) { return null; };\n    SpyLocation = __decorate([\n        Injectable()\n    ], SpyLocation);\n    return SpyLocation;\n}());\nvar LocationState = /** @class */ (function () {\n    function LocationState(path, query, state) {\n        this.path = path;\n        this.query = query;\n        this.state = state;\n    }\n    return LocationState;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nvar MockLocationStrategy = /** @class */ (function (_super) {\n    __extends(MockLocationStrategy, _super);\n    function MockLocationStrategy() {\n        var _this = _super.call(this) || this;\n        _this.internalBaseHref = '/';\n        _this.internalPath = '/';\n        _this.internalTitle = '';\n        _this.urlChanges = [];\n        /** @internal */\n        _this._subject = new EventEmitter();\n        return _this;\n    }\n    MockLocationStrategy.prototype.simulatePopState = function (url) {\n        this.internalPath = url;\n        this._subject.emit(new _MockPopStateEvent(this.path()));\n    };\n    MockLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.internalPath;\n    };\n    MockLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n            return this.internalBaseHref + internal.substring(1);\n        }\n        return this.internalBaseHref + internal;\n    };\n    MockLocationStrategy.prototype.pushState = function (ctx, title, path, query) {\n        this.internalTitle = title;\n        var url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        var externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push(externalUrl);\n    };\n    MockLocationStrategy.prototype.replaceState = function (ctx, title, path, query) {\n        this.internalTitle = title;\n        var url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        var externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push('replace: ' + externalUrl);\n    };\n    MockLocationStrategy.prototype.onPopState = function (fn) { this._subject.subscribe({ next: fn }); };\n    MockLocationStrategy.prototype.getBaseHref = function () { return this.internalBaseHref; };\n    MockLocationStrategy.prototype.back = function () {\n        if (this.urlChanges.length > 0) {\n            this.urlChanges.pop();\n            var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n            this.simulatePopState(nextUrl);\n        }\n    };\n    MockLocationStrategy.prototype.forward = function () { throw 'not implemented'; };\n    MockLocationStrategy = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], MockLocationStrategy);\n    return MockLocationStrategy;\n}(LocationStrategy));\nvar _MockPopStateEvent = /** @class */ (function () {\n    function _MockPopStateEvent(newUrl) {\n        this.newUrl = newUrl;\n        this.pop = true;\n        this.type = 'popstate';\n    }\n    return _MockPopStateEvent;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpyLocation, MockLocationStrategy };\n//# sourceMappingURL=testing.js.map\n","/**\n * @license Angular v7.0.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __values, __decorate, __metadata } from 'tslib';\nimport { Location, LocationStrategy } from '@angular/common';\nimport { MockLocationStrategy, SpyLocation } from '@angular/common/testing';\nimport { Compiler, Injectable, Injector, NgModule, NgModuleFactoryLoader, Optional } from '@angular/core';\nimport { ChildrenOutletContexts, NoPreloading, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTES, Router, RouterModule, UrlHandlingStrategy, UrlSerializer, provideRoutes, ɵROUTER_PROVIDERS, ɵflatten } from '@angular/router';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Allows to simulate the loading of ng modules in tests.\n *\n * ```\n * const loader = TestBed.get(NgModuleFactoryLoader);\n *\n * @Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * @NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n * @publicApi\n */\nvar SpyNgModuleFactoryLoader = /** @class */ (function () {\n    function SpyNgModuleFactoryLoader(compiler) {\n        this.compiler = compiler;\n        /**\n         * @docsNotRequired\n         */\n        this._stubbedModules = {};\n    }\n    Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n        /**\n         * @docsNotRequired\n         */\n        get: function () { return this._stubbedModules; },\n        /**\n         * @docsNotRequired\n         */\n        set: function (modules) {\n            var e_1, _a;\n            var res = {};\n            try {\n                for (var _b = __values(Object.keys(modules)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var t = _c.value;\n                    res[t] = this.compiler.compileModuleAsync(modules[t]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._stubbedModules = res;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpyNgModuleFactoryLoader.prototype.load = function (path) {\n        if (this._stubbedModules[path]) {\n            return this._stubbedModules[path];\n        }\n        else {\n            return Promise.reject(new Error(\"Cannot find module \" + path));\n        }\n    };\n    SpyNgModuleFactoryLoader = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Compiler])\n    ], SpyNgModuleFactoryLoader);\n    return SpyNgModuleFactoryLoader;\n}());\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, opts, urlHandlingStrategy) {\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, ɵflatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            if (opts.malformedUriErrorHandler) {\n                router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n            }\n            if (opts.paramsInheritanceStrategy) {\n                router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n            }\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n * NgModuleFactoryLoader}.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nvar RouterTestingModule = /** @class */ (function () {\n    function RouterTestingModule() {\n    }\n    RouterTestingModule_1 = RouterTestingModule;\n    RouterTestingModule.withRoutes = function (routes, config) {\n        return {\n            ngModule: RouterTestingModule_1,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    };\n    var RouterTestingModule_1;\n    RouterTestingModule = RouterTestingModule_1 = __decorate([\n        NgModule({\n            exports: [RouterModule],\n            providers: [\n                ɵROUTER_PROVIDERS, { provide: Location, useClass: SpyLocation },\n                { provide: LocationStrategy, useClass: MockLocationStrategy },\n                { provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                    provide: Router,\n                    useFactory: setupTestingRouter,\n                    deps: [\n                        UrlSerializer, ChildrenOutletContexts, Location, NgModuleFactoryLoader, Compiler, Injector,\n                        ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()]\n                    ]\n                },\n                { provide: PreloadingStrategy, useExisting: NoPreloading }, provideRoutes([])\n            ]\n        })\n    ], RouterTestingModule);\n    return RouterTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpyNgModuleFactoryLoader, setupTestingRouter, RouterTestingModule };\n//# sourceMappingURL=testing.js.map\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotificationComponent } from './notification/notification.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'notification',\n    pathMatch: 'full'\n},\n  {\n        path: 'notification',\n        component: NotificationComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotificationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { NotificationRoutingModule } from './notification-routing.module';\nimport { NotificationComponent } from './notification/notification.component';\nimport {FormsModule} from '@angular/forms';\nimport {RouterTestingModule} from '@angular/router/testing';\n\n\n@NgModule({\n  \n  imports: [\n    CommonModule,\n    NotificationRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,RouterTestingModule\n  ],\n  declarations: [NotificationComponent]\n})\nexport class NotificationModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section class=\\\"content home\\\">\\r\\n  <div class=\\\"block-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\r\\n        <h2>Notification\\r\\n          <small>Send Notification to Patient </small>\\r\\n        </h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-7 col-md-7 col-sm-12 text-right\\\">\\r\\n\\r\\n\\r\\n        <ul class=\\\"breadcrumb float-md-right\\\">\\r\\n          <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"./notifi/notification\\\"><i class=\\\"zmdi zmdi-home\\\"></i> Doctor</a></li>\\r\\n          <li class=\\\"breadcrumb-item active\\\">Notification</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h2><strong>Notification</strong> Detail</h2>\\r\\n          </div>\\r\\n          <div class=\\\"body product-report\\\">\\r\\n            <div class=\\\"row clearfix\\\">\\r\\n              <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\r\\n                <label for=\\\"titles\\\"><b>Title</b></label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Type tittle here\\\" name=\\\"mytittle\\\"  [(ngModel)]=\\\"mytittle\\\" >\\r\\n                </div>\\r\\n                <label for=\\\"msg\\\"><b>Message</b></label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Type message here\\\" name=\\\"mymessage\\\" [(ngModel)]=\\\"mymessage\\\">\\r\\n                  <!-- [formControl]=\\\"control\\\" [(ngModel)]=\\\"mytittle\\\" -->\\r\\n                  <!-- [formControl]=\\\"control\\\" [(ngModel)]=\\\"mymessage\\\" -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row clearfix\\\">\\r\\n              <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\r\\n              <label><b>Type:</b></label>\\r\\n              <div class=\\\"row clearfix\\\">\\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n                <div class=\\\"form-check\\\">\\r\\n                  <label class=\\\"form-check-label\\\">\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"sms\\\" id=\\\"sms\\\" sms=\\\"true\\\" style=\\\"zoom: 1.1;\\\"  [(ngModel)]=\\\"sms\\\">SMS Notification\\r\\n                    <!-- [formControl]=\\\"control\\\" [(ngModel)]=\\\"sms\\\" -->\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <!-- <div><input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"chk\\\"> Value 1</div> -->\\r\\n              \\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n                <div class=\\\"form-check\\\">\\r\\n                  <label class=\\\"form-check-label\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"yuEmail\\\" name=\\\"Email\\\" value=\\\"\\\" style=\\\"zoom: 1.1;\\\" [(ngModel)]=\\\"email\\\">Emailnotification\\r\\n                    <!-- <input type=\\\"button\\\" value=\\\"Email\\\" id=\\\"buttonClass\\\">  -->\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n                <div class=\\\"form-check\\\">\\r\\n                  <label class=\\\"form-check-label\\\">\\r\\n                    <input type=\\\"checkbox\\\"  value=\\\"\\\" style=\\\"zoom: 1.1;\\\" [(ngModel)]=\\\"push\\\">Push Notification</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n    \\r\\n<!-- ******************************************************************* -->\\r\\n<div class=\\\"row clearfix\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\r\\n    <label><b>Reason:</b></label>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n    <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n      <div class=\\\"form-check\\\">\\r\\n        <label class=\\\"form-check-label\\\">\\r\\n          <input type=\\\"checkbox\\\" name=\\\"f\\\" value=\\\"book\\\" style=\\\"zoom: 1.1;\\\"  [(ngModel)]=\\\"Booking\\\">Booking\\r\\n          <!-- [formControl]=\\\"control\\\" [(ngModel)]=\\\"sms\\\" -->\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <!-- <div><input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"chk\\\"> Value 1</div> -->\\r\\n    \\r\\n    <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n      <div class=\\\"form-check\\\">\\r\\n        <label class=\\\"form-check-label\\\">\\r\\n          <input type=\\\"checkbox\\\"  name=\\\"Cancel\\\" value=\\\"\\\" style=\\\"zoom: 1.1;\\\" [(ngModel)]=\\\"Cancel\\\" >Cancel\\r\\n          <!-- <input type=\\\"button\\\" value=\\\"Email\\\" id=\\\"buttonClass\\\">  -->\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n   <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\r\\n                <div class=\\\"form-check\\\">\\r\\n                  <label class=\\\"form-check-label\\\">\\r\\n                    <input type=\\\"checkbox\\\"  value=\\\"\\\" style=\\\"zoom: 1.1;\\\" name=\\\"Checkout\\\"  [(ngModel)]=\\\"Checkout\\\">Checkout</label>\\r\\n                </div>\\r\\n              </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n<!-- *********************************************************************** -->\\r\\n            <div class=\\\"row clearfix\\\">\\r\\n                <div class=\\\"col-lg-10 col-md-12 col-sm-12\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-12 col-sm-12\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary btn-round waves-effect\\\" name=\\\"\\\" (click)=\\\"test(mymessage,mytittle,Booking,Cancel,Checkout)\\\">Send Notification</button>                    \\r\\n                </div>\\r\\n            </div>      \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from './notification.service';\nimport {Router} from '@angular/router';\nimport {LocalStorageService} from 'ngx-webstorage';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n  providers:[NotificationService]\n})\n\n\nexport class NotificationComponent implements OnInit {\n  public sms=false;\n  public email=false;\n  public push=false;\n  public Cancel=false;\n  public Checkout=false;\n  public Booking=false;\n  public mymessage:any=[];\n  public mytittle:any=[];\n  public patientListData:any=[];\n  public patient;\n\n  constructor(private notification:NotificationService,private router:Router,private storage:LocalStorageService) { }\n  ngOnInit() {\n    \n  }\n\n\n\n\npatientlist(){\n  let patient={\n    \"doctor_id\":this.storage.retrieve('doctor_id'),\n    \"business_id\":this.storage.retrieve('business_id'),\n    \"business_date\":\"2019-03-01\"\n  }\n  this.notification.patientlist(patient).subscribe((Response: any) => {\n  if(Response.Message_Code == \"ASS\"){\n    this.patientListData = Response.output;\n    console.log(\"patientlist\",Response.patientListData)\n\n    for(var i=0;i<this.patientListData.length;i++){\n      this.patient = this.patient + this.patientListData[i].user_name + \",\";\n      alert(this.patient)\n      \n  }\n}\n  });\n  \n}\n \n/********************************************************************************************/\ntest(mymessage,mytittle,booking,cancel,checkout){\n    console.log(\"aggg\")\n     if(this.mymessage !=\"\" && this.mytittle !=\"\" ){\n       console.log(\"empty\",mymessage,mytittle)\n\n/**************************  SMS  *************************************/\n       if(this.sms==true){\n        alert(\"You are selecting SMS notification\");\n        if(this.Booking==true){\n          alert(\"You are selecting sms Booking notification\");\n\n        let sms={\n          \"business_id\":this.storage.retrieve('business_id'),\n          \"doctor_id\":this.storage.retrieve('doctor_id'),\n          \"business_date\":\"2019-03-01\",\n          \"token_status\":\"Booked\",\n          \"message\":mymessage\n       }\n       \n        console.log(\"this sms\")\n          this.notification.SMSALL(sms).subscribe((Response: any)=>{\n            console.log(\"sms\")\n            if(Response.Message_Code==\"SSS\"){\n                alert(Response.Message);\n            }\n          })\n      }\n         \n       else if(this.Cancel==true){\n          alert(\"You are selecting SMS Cancel notification\");\n\n          let sms={\n            \"business_id\":this.storage.retrieve('business_id'),\n            \"doctor_id\":this.storage.retrieve('doctor_id'),\n            \"business_date\":\"2019-03-01\",\n            \"token_status\":\"Cancel\",\n            \"message\":mymessage\n         }\n         \n          console.log(\"this sms\")\n            this.notification.SMSALL(sms).subscribe((Response: any)=>{\n              console.log(\"sms\")\n              if(Response.Message_Code==\"SSS\"){\n                  alert(Response.Message);\n              }\n            })\n         }\n        else if(this.Checkout==true){\n          alert(\"You are selecting SMS Checkout notification\");\n\n          let sms={\n            \"business_id\":this.storage.retrieve('business_id'),\n            \"doctor_id\":this.storage.retrieve('doctor_id'),\n            \"business_date\":\"2019-03-01\",\n            \"token_status\":\"Checkout\",\n            \"message\":mymessage\n         }\n         \n          console.log(\"this sms\")\n            this.notification.SMSALL(sms).subscribe((Response: any)=>{\n              console.log(\"sms\")\n              if(Response.Message_Code==\"SSS\"){\n                  alert(Response.Message);\n                  console.log(\"smsall\",Response.Message);\n              }\n            })\n         } \n        }\n       \n      \n\n       if(this.email==true){\n        alert(\"You are selecting Email notification\");\n        if(this.Booking==true){\n          alert(\"You are selecting email Booking notification\");\n                    \n       let mailall={\n        \"doctor_id\":this.storage.retrieve('doctor_id'),\n        \"business_id\":this.storage.retrieve('business_id'),    \n        \"message\":\n         {\n             \"name\":\" mohan\",\n             \"message\":mymessage,\n             \"token_no\":\"8\",\n             \"token_status\":\"Booked\",\n             \"wait_time\":\"30 min(s)\",\n             \"bus_hour\": \"9 AM to 6 PM \",\n             \"break_time\" : \"2 PM to 3 PM\",\n             \"address\" : \"No,23 New Colony,1st Cross Street,Chrompet,Chennai-600045\",\n             \"hospital\":\"-by MIOT Hospital\"\n         },\n         \"subject\":mytittle\n    }\n  \n \n      this.notification.EMAILALL(mailall).subscribe((Response: any)=>{\n        if(Response.Message_code==\"MSS\"){\n            alert(Response.Message);\n        }\n        \n      })\n    } \n  \n        \n        else if(this.Cancel==true){\n          alert(\"You are selecting email Cancel notification\");\n\n          let mailall={\n            \"doctor_id\":this.storage.retrieve('doctor_id'),\n            \"business_id\":this.storage.retrieve('business_id'),    \n            \"message\":\n             {\n                 \"name\":\" mohan\",\n                 \"message\":mymessage,\n                 \"token_no\":\"8\",\n                 \"token_status\":\"Cancel\",\n                 \"wait_time\":\"30 min(s)\",\n                 \"bus_hour\": \"9 AM to 6 PM \",\n                 \"break_time\" : \"2 PM to 3 PM\",\n                 \"address\" : \"No,23 New Colony,1st Cross Street,Chrompet,Chennai-600045\",\n                 \"hospital\":\"-by MIOT Hospital\"\n             },\n             \"subject\":mytittle\n        }\n      \n     \n          this.notification.EMAILALL(mailall).subscribe((Response: any)=>{\n            if(Response.Message_code==\"MSS\"){\n                alert(Response.Message);\n            }\n            \n          })\n         }\n        else if(this.Checkout==true){\n          alert(\"You are selecting email Checkout notification\");\n\n          let mailall={\n            \"doctor_id\":this.storage.retrieve('doctor_id'),\n            \"business_id\":this.storage.retrieve('business_id'),    \n            \"message\":\n             {\n                 \"name\":\" mohan\",\n                 \"message\":mymessage,\n                 \"token_no\":\"8\",\n                 \"token_status\":\"Checkout\",\n                 \"wait_time\":\"30 min(s)\",\n                 \"bus_hour\": \"9 AM to 6 PM \",\n                 \"break_time\" : \"2 PM to 3 PM\",\n                 \"address\" : \"No,23 New Colony,1st Cross Street,Chrompet,Chennai-600045\",\n                 \"hospital\":\"-by MIOT Hospital\"\n             },\n             \"subject\":mytittle\n        }\n      \n     \n          this.notification.EMAILALL(mailall).subscribe((Response: any)=>{\n            if(Response.Message_code==\"MSS\"){\n                alert(Response.Message);\n            }\n            \n          })\n         } \n        } \n\n      \n   \n      if(this.push==true){\n        alert(\"You are selecting Push notification\");\n        if(this.Booking==true){\n          alert(\"You are selecting Push Booking notification\");\n         }\n         if(this.Cancel==true){\n          alert(\"You are selecting Push Cancel notification\");\n         }\n         if(this.Checkout==true){\n          alert(\"You are selecting Push Checkout notification\");\n         } \n      }\n       \n    }  \n    \n    \n  else{\n        console.log(\"elsr\")\n        alert(\"Type a Message and Tittle and check your checkboxes\");\n      }\n    \n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private http:HttpClient) { }\n\n// SMS(notify){\n//     return this.http.post(\"https://doctorappnew.herokuapp.com/seneSMSALL\",notify)\n//   }\n\nEMAILALL(mail){\n  return this.http.post(\"https://doctorappnew.herokuapp.com/SendEmailAll\",mail)\n}\n\nSMSALL(smsall){\n  return this.http.post(\"https://doctorappnew.herokuapp.com/SendSMS\",smsall)\n}\n\npush(notify){\n  return this.http.get(\"https://doctorappnew.herokuapp.com/\",notify)\n}\npatientlist(updates){\n  return this.http.post('https://doctorappnew.herokuapp.com/SelectAppoinment',updates\t)\n}\n}\n\n"],"sourceRoot":""}